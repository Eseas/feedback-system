<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lt.vu.dao.datamapper.PersonMapper">
  <resultMap id="BaseResultMap" type="lt.vu.entities.mybatis.Person">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />


    <!-- Rankomis prirašytas ryšiui ManyToOne Student -> University -->
    <!-- Nested result (nėra N+1 select problemos) -->
    <!--<association property="university" resultMap="lt.vu.usecases.mybatis.dao.UniversityMapper.BaseResultMap"-->
                 <!--columnPrefix="university_"/>-->

    <!--Rankomis: -->
    <collection property="surveyList" javaType="ArrayList" column="id" ofType="Survey" select="selectSurveysForPerson"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from public.person
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="lt.vu.entities.mybatis.Person" useGeneratedKeys="true">
    insert into public.person (first_name, last_name, email, 
      password)
    values (#{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="lt.vu.entities.mybatis.Person">
    update public.person
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, first_name, last_name, email, password
    from public.person
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
      SELECT id, first_name, last_name, email, password
      FROM public.person
  </select>

  <!-- Rankomis prirašytas ryšiui ManyToMany Person - Survey -->
  <!-- Neveikia: WHERE ps.person_id = #{id,jdbcType=INTEGER} -->
  <select id="selectSurveysForPerson" resultType="Survey">
    SELECT
        s.id,
        s.name
    FROM public.survey s
        JOIN public.person_survey ps on s.id = ps.survey_id
        WHERE ps.person_id = #{id,jdbcType=INTEGER}
  </select>
</mapper>